<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Albert Fradera Sola</title>
    <link>https://AFraderaSola.github.io/project/</link>
      <atom:link href="https://AFraderaSola.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 15 Feb 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://AFraderaSola.github.io/media/icon_huf5ee247ce1e31b4a1480ddc7a50ce984_103999_512x512_fill_lanczos_center_3.png</url>
      <title>Projects</title>
      <link>https://AFraderaSola.github.io/project/</link>
    </image>
    
    <item>
      <title>Interactive CV network</title>
      <link>https://AFraderaSola.github.io/project/cvnetwork/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://AFraderaSola.github.io/project/cvnetwork/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#the-data&#34;&gt;The data&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#the-plot&#34;&gt;The plot&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;The main idea behind this project is to make your &lt;strong&gt;CV shine&lt;/strong&gt;,  by visualizing its data and plotting it in an interactive fashion you. Thus what I want to do is to connect the usual entries on a CV (education, positions, publications&amp;hellip;) by year, so I can visualize, in an intuitive way, how a career path has developed.&lt;/p&gt;
&lt;p&gt;Thus our goal is to create an &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot5.html&#34; target=&#34;_blank&#34;&gt;interactive network&lt;/a&gt; of the CV. If you would like to know how to generate something similar, continue to read.&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The inspiration for this network-plot is the fantastic package and tutorial &lt;a href=&#34;http://nickstrayer.me/datadrivencv/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;datadrivencv&lt;/a&gt;, by &lt;a href=&#34;https://nickstrayer.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nick Strayer&lt;/a&gt;, which has the goal of &lt;strong&gt;automatizing the CV update&lt;/strong&gt;. To do so, you would keep each entry on the CV on a .csv file that you would later render into a a .pdf or .html file. In such file, rows correspond to each &lt;em&gt;entry&lt;/em&gt; on your CV, for instance your &lt;em&gt;education degrees&lt;/em&gt; or &lt;em&gt;job experiences&lt;/em&gt;, and columns describe the positions, for instance start year or location.&lt;/p&gt;
&lt;h3 id=&#34;the-data&#34;&gt;The data&lt;/h3&gt;
&lt;p&gt;The network-plot starting point is, this way, a CV entries data file. You can check out an example of a CV entries file at Nick&amp;rsquo;s Strayer tutorial &lt;a href=&#34;https://docs.google.com/spreadsheets/d/14MQICF2F8-vf8CKPF1m4lyGKO6_thG-4aSwat1e2TWc/edit#gid=917338460&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spreadsheet&lt;/a&gt;. You can also download the necessary data to replicate this tutorial &lt;a href=&#34;https://github.com/AFraderaSola/CV/blob/master/network_post_data/network_entries.csv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the network plot I just need each entry on the CV and its corresponding year, so I start by filtering our data with &lt;a href=&#34;https://dplyr.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dplyr&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Load entries data file:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;network_entries.csv&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Filter relevant columns:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(title, start, end)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I want to make sure that all entries in start and end are &lt;strong&gt;numeric&lt;/strong&gt;, as they should  be years:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;start &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;start)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;end)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;All non numeric entries (like empty values or years set to &amp;ldquo;current&amp;rdquo;) will be transformed into &lt;strong&gt;NA values&lt;/strong&gt;. I will use this in our favour to further filter the data.&lt;/p&gt;
&lt;p&gt;First I want to kick out all the rows containing NA both in start and end, as those are &lt;strong&gt;time independent&lt;/strong&gt; entries (like skills) &lt;strong&gt;not relevant&lt;/strong&gt; to network-plot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Flag NA values with the logic statement TRUE and combine columns start and year:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;filter &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;interaction&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;start),&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;end))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Filter out all entries that are &amp;#34;TRUE.TRUE&amp;#34; (NA values in both columns) and remove the filter columns:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df[&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;my_relevant_df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;filter &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TRUE.TRUE&amp;#34;&lt;/span&gt;,]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(title, start, end)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our last step on data cleaning is assign year values to the remaining NA:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NA values at the &lt;strong&gt;start column&lt;/strong&gt; are assigned to be the same value that end year (i. e., a publication)&lt;/li&gt;
&lt;li&gt;NA values at the &lt;strong&gt;end column&lt;/strong&gt; are assigned to current year (i. e., current job)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(start), end, start))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;current_year &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; lubridate&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;(lubridate&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ymd&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.Date&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(end), current_year, end))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that the data is cleaned up, I will generate the two data frames I need for the network plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nodes data,  containing each entry on the CV&lt;/li&gt;
&lt;li&gt;Edges data, containing the (year) connections among the CV entries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I start by generating the &lt;strong&gt;edges&lt;/strong&gt;. First step is to assign a numeric id to each entry and selecting the year columns:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; edges &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;row_number&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; edges &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, start, end)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then I generate the edges with a function borrowed from the &lt;a href=&#34;http://nickstrayer.me/datadrivencv/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;datadrivencv&lt;/a&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Combine the start and end years into a integer range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; edges &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; purrr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pmap_dfr&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(id, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         start, end) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end, id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Nest all entries per year range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  edges &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(year) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; tidyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nest&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(ids_for_year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Generate the edges&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;combination_indices &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(n) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rep_counts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; (n&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n, times &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rep_counts), b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; purrr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flatten_int&lt;/span&gt;(purrr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(rep_counts, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                    &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                      &lt;span style=&#34;color:#a6e22e&#34;&gt;tail&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n, .x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                    })))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; edges &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; purrr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pmap_dfr&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(year, ids_for_year) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;combination_indices&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(ids_for_year)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;transmute&lt;/span&gt;(year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                               from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ids_for_year&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;id[a], to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ids_for_year&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;id[b])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then I proceed to generate the &lt;strong&gt;nodes&lt;/strong&gt; data frame assigning, like in the edges data frame, a numeric id. Next we select the entries on the CV (titles) and the sections they belong to, which I clean up with the &lt;a href=&#34;https://stringr.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stringr&lt;/a&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; my_relevant_df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; nodes &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;row_number&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; nodes &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, title, section)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make the sections look nices&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; nodes &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(section &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_to_title&lt;/span&gt;(stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(section, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;the-plot&#34;&gt;The plot&lt;/h3&gt;
&lt;p&gt;Now that I have generated the edges and nodes  data frames, I can proceed with the first basic network. I do so with the &lt;a href=&#34;https://datastorm-open.github.io/visNetwork/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visNetwork&lt;/a&gt; package and &lt;a href=&#34;https://igraph.org/r/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;igraph&lt;/a&gt; nicely algorithm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNetwork&lt;/span&gt;(nodes, edges)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visIgraphLayout&lt;/span&gt;(layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;layout_nicely&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visOptions&lt;/span&gt;(highlightNearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(hover &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;















&lt;figure  id=&#34;figure-cv-network-basic&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CV network: basic&#34; srcset=&#34;
               /project/cvnetwork/plot1_hu83b535d35ef84dd0becc669687ff9e02_41644_f1b58de3d9b465238a169bdd53a42f26.webp 400w,
               /project/cvnetwork/plot1_hu83b535d35ef84dd0becc669687ff9e02_41644_254d5ba82890d382f05889e1af6243ca.webp 760w,
               /project/cvnetwork/plot1_hu83b535d35ef84dd0becc669687ff9e02_41644_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/cvnetwork/plot1_hu83b535d35ef84dd0becc669687ff9e02_41644_f1b58de3d9b465238a169bdd53a42f26.webp&#34;
               width=&#34;760&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CV network: basic
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Interactive version &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot1.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This first network is &lt;strong&gt;not very intuitive&lt;/strong&gt; as the nodes cannot be distinguished. Thus, I start the &lt;strong&gt;customization&lt;/strong&gt; by adding some &lt;strong&gt;labels&lt;/strong&gt;. These are generated with the section column followed by the first 20 characters of the title column:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;label &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;section, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nchar&lt;/span&gt;(nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;title) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;title,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;), nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;title))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNetwork&lt;/span&gt;(nodes, edges)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visIgraphLayout&lt;/span&gt;(layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;layout_nicely&amp;#34;&lt;/span&gt;,randomSeed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visOptions&lt;/span&gt;(highlightNearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(hover &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;















&lt;figure  id=&#34;figure-cv-network-node-labels&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CV network: node labels&#34; srcset=&#34;
               /project/cvnetwork/plot2_hu7af600ddea68f571d157c7dcb124e401_61838_ca28f9b0442a11a1b74a9097ad6f4e71.webp 400w,
               /project/cvnetwork/plot2_hu7af600ddea68f571d157c7dcb124e401_61838_7dd17482a6764981f6265203f0bb121a.webp 760w,
               /project/cvnetwork/plot2_hu7af600ddea68f571d157c7dcb124e401_61838_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/cvnetwork/plot2_hu7af600ddea68f571d157c7dcb124e401_61838_ca28f9b0442a11a1b74a9097ad6f4e71.webp&#34;
               width=&#34;760&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CV network: node labels
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Interactive version &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot2.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even with labels the network is still not very intuitive. What if I add some &lt;strong&gt;colour&lt;/strong&gt;? For instance, I can colour each node by the section it belongs to. For this network I selected the Paired color palette from &lt;a href=&#34;https://r-graph-gallery.com/38-rcolorbrewers-palettes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RColorBrewer&lt;/a&gt;. This allows me to &lt;strong&gt;pair&lt;/strong&gt; by colour &lt;strong&gt;similar sections&lt;/strong&gt; (education and online education cours, proteomics and genomics publications, and so on) and better visualize the nodes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Node border color&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color.border &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Node background color&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sections &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;section)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;colors &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; RColorBreIr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;breIr.pal&lt;/span&gt;(n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(sections), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Paired&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color.background &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;section
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(sections)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  nodes[nodes&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;section &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; sections[i],]&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color.background &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; colors[i]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNetwork&lt;/span&gt;(nodes, edges)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visIgraphLayout&lt;/span&gt;(layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;layout_nicely&amp;#34;&lt;/span&gt;,randomSeed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visOptions&lt;/span&gt;(highlightNearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(hover &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;















&lt;figure  id=&#34;figure-cv-network-nodes-coloured&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CV network: nodes coloured&#34; srcset=&#34;
               /project/cvnetwork/plot3_hu41c2f2a31776383ceb116f7e95f8f2ef_61831_52e781816ab8bf42ff5e86a2a673bb3b.webp 400w,
               /project/cvnetwork/plot3_hu41c2f2a31776383ceb116f7e95f8f2ef_61831_34da61a462cb0108f5edd276c532918b.webp 760w,
               /project/cvnetwork/plot3_hu41c2f2a31776383ceb116f7e95f8f2ef_61831_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/cvnetwork/plot3_hu41c2f2a31776383ceb116f7e95f8f2ef_61831_52e781816ab8bf42ff5e86a2a673bb3b.webp&#34;
               width=&#34;760&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CV network: nodes coloured
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Interactive version &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot3.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that our nodes look &lt;strong&gt;beautiful&lt;/strong&gt; I can focus on the edges. I like to colour them in shades in grey, so they get darker as they get closer to the current year:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;years &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(edges&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;colors &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; RColorBreIr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;breIr.pal&lt;/span&gt;(n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(years), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Greys&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edges&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(edges&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(years)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  edges[edges&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; years[i],]&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; colors[i]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNetwork&lt;/span&gt;(nodes, edges)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visIgraphLayout&lt;/span&gt;(layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;layout_nicely&amp;#34;&lt;/span&gt;,randomSeed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visOptions&lt;/span&gt;(highlightNearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(hover &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;















&lt;figure  id=&#34;figure-cv-network-edges-coloured&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CV network: edges coloured&#34; srcset=&#34;
               /project/cvnetwork/plot4_huec620ddf8542cf3e0923c63aea8c635e_58241_e70c5c2da9979e1216f2317b7e1cb528.webp 400w,
               /project/cvnetwork/plot4_huec620ddf8542cf3e0923c63aea8c635e_58241_f2eb3d71fa7b0573560843b66912de06.webp 760w,
               /project/cvnetwork/plot4_huec620ddf8542cf3e0923c63aea8c635e_58241_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/cvnetwork/plot4_huec620ddf8542cf3e0923c63aea8c635e_58241_e70c5c2da9979e1216f2317b7e1cb528.webp&#34;
               width=&#34;760&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CV network: edges coloured
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Interactive version &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot4.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the static version of the network that would be it. I have now an intuitive  network that shows in a nice flow on my career path. Hooray!&lt;/p&gt;
&lt;p&gt;There are a couple more twitches I like to perform for the interactive version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change the colour of selected node&lt;/li&gt;
&lt;li&gt;Remove the labels, as you can hoover over the node to check its name&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Remove labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nodes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; nodes &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;label)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Highlight selected node in black&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNetwork&lt;/span&gt;(nodes, edges)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visIgraphLayout&lt;/span&gt;(layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;layout_nicely&amp;#34;&lt;/span&gt;,randomSeed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visNodes&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  visNetwork&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;visOptions&lt;/span&gt;(highlightNearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(hover &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives our final interactive CV network which, again, can be explored &lt;a href=&#34;https://AFraderaSola.github.io/uploads/project/CVnetwork/plot5.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope you  liked this plot and tutorial!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Network-based assignment of RNA-binding protein function</title>
      <link>https://AFraderaSola.github.io/project/rbpyeast/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://AFraderaSola.github.io/project/rbpyeast/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#the-data&#34;&gt;The Data&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#data-analysis&#34;&gt;Data analysis&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;This project aims to identify the functionalities of RNA-binding proteins (RBPs) through &lt;strong&gt;proteomics&lt;/strong&gt; data and &lt;strong&gt;network analysis&lt;/strong&gt;. &lt;strong&gt;Mass-spectrometry&lt;/strong&gt; data was used to collect interaction partners for 40 RBPs with known functionalities in mRNA life cycle. Then, a network was constructed to connect all the proteins, and a &lt;strong&gt;guilt-by-association principle&lt;/strong&gt; was applied to assign novel functionalities. As a result, a &lt;strong&gt;Shiny app&lt;/strong&gt; database &lt;a href=&#34;https://butterlab.imb-mainz.de/RINE/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://butterlab.imb-mainz.de/RINE/&lt;/a&gt; was created for interactive data exploration. If you find the app interesting and want to learn more about the data analysis behind it, please continue reading.&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This project is the foundation of my &lt;strong&gt;PhD thesis&lt;/strong&gt;, which focuses on mass-spectrometry (MS) data, specifically on RNA-binding proteins (RBPs) and their associated functionalities. In recent years, the number of proteins classified as RBPs has &lt;strong&gt;skyrocketed&lt;/strong&gt;, with 1,273 proteins classified as RBPs in yeast alone. If you&amp;rsquo;re curious about this phenomenon, you can check out this informative review by &lt;a href=&#34;https://www.nature.com/articles/nrm.2017.130&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hentze &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt; Despite the increasing number of proteins classified as RBPs, their &lt;strong&gt;functional&lt;/strong&gt; roles remain largely unexplored.&lt;/p&gt;
&lt;p&gt;The main reason behind this lack of functional details is that newly described RBPs mostly come from &lt;strong&gt;high-throughput&lt;/strong&gt; techniques such as &lt;a href=&#34;https://www.nature.com/articles/s41467-018-06557-8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RNA interactome capture (RIC)&lt;/a&gt;. These techniques generate large datasets and &lt;strong&gt;excel at identifying and classifying individuals&lt;/strong&gt;, but they lack deep biological characterization. The goal of this project was to add a &lt;strong&gt;first layer&lt;/strong&gt; of functional characterization while maintaining a &lt;strong&gt;high-throughput&lt;/strong&gt; approach. Therefore, we selected &lt;strong&gt;40 well-characterized yeast RBPs&lt;/strong&gt; and identified their interaction partners with immunoprecipitation coupled to MS-based quantitative proteomics. With this data, we were able to build &lt;strong&gt;function-based&lt;/strong&gt; networks to gather hints on which individuals might be involved in particular &lt;strong&gt;RNA-related&lt;/strong&gt; pathways.&lt;/p&gt;
&lt;h3 id=&#34;the-data&#34;&gt;The Data&lt;/h3&gt;
&lt;h4 id=&#34;candidate-rbps&#34;&gt;Candidate RBPs&lt;/h4&gt;
&lt;p&gt;To begin with, I aimed to gather the interaction partners of 40 chosen RBPs, which would serve as the foundation of our function-based networks. Before delving into the interactors data, let&amp;rsquo;s take a step back and examine the candidates data. Why specifically these 40 RBPs? How do they facilitate the formation of function-based networks? Moreover, what precisely do I mean by &amp;ldquo;function-based networks&amp;rdquo;?&lt;/p&gt;
















&lt;figure  id=&#34;figure-function-based-network-concept&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Function-based network concept&#34; srcset=&#34;
               /project/rbpyeast/Picture1_hu8ee9ec9a5ef309c7308b75c89c87d1ac_68090_0a753119a3e26e3c5c5508ea97850a92.webp 400w,
               /project/rbpyeast/Picture1_hu8ee9ec9a5ef309c7308b75c89c87d1ac_68090_cd4ecb239fa87a8f83cc8220a0cb94ad.webp 760w,
               /project/rbpyeast/Picture1_hu8ee9ec9a5ef309c7308b75c89c87d1ac_68090_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture1_hu8ee9ec9a5ef309c7308b75c89c87d1ac_68090_0a753119a3e26e3c5c5508ea97850a92.webp&#34;
               width=&#34;760&#34;
               height=&#34;490&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Function-based network concept
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Let’s start by refreshing some basic network terminology. In this post, I will refer to the selected RBPs as &lt;strong&gt;&amp;ldquo;network hubs&amp;rdquo;&lt;/strong&gt;, their interaction partners as &lt;strong&gt;&amp;ldquo;nodes&amp;rdquo;&lt;/strong&gt;, and the connections between them as &lt;strong&gt;&amp;ldquo;edges&amp;rdquo;&lt;/strong&gt;. By using this terminology, each square representing a target RBP can be considered a hub, each circle representing an IP interactor can be considered a node, and the lines representing connections between them can be considered edges. Using these three elements, I created the &lt;strong&gt;RBP interactome network&lt;/strong&gt;. When we later filter this larger network for a particular functionality, we obtain a &lt;strong&gt;&amp;ldquo;function-based network&amp;rdquo;&lt;/strong&gt;. For example, if we only keep the blue hubs, we can create a blue function-based network.&lt;/p&gt;
&lt;p&gt;With our network &lt;em&gt;lingua franca&lt;/em&gt; established, let&amp;rsquo;s now focus on our 40 RBP candidates. These RBPs were selected based on their potential to become the hubs on the function-based networks. To ensure this, it was crucial to choose &lt;strong&gt;well-studied&lt;/strong&gt; candidates that play &lt;strong&gt;central roles&lt;/strong&gt; in their pathways. To identify such candidates, I consulted the &lt;a href=&#34;https://www.kegg.jp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KEGG&lt;/a&gt; and &lt;a href=&#34;https://reactome.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reactome&lt;/a&gt; databases, which helped me identify RBPs involved in &lt;strong&gt;RNA biology pathways&lt;/strong&gt; such as degradation or splicing. Additionally, our &lt;strong&gt;candidates&lt;/strong&gt; needed to be included in the TAP-tagged commercial library so that I could capture them with an antibody.&lt;/p&gt;
&lt;h4 id=&#34;interactors-data&#34;&gt;Interactors data&lt;/h4&gt;
















&lt;figure  id=&#34;figure-immunoprecipitation-experimental-design&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Immunoprecipitation experimental design&#34; srcset=&#34;
               /project/rbpyeast/Picture2_hu35c416225f13a2100881285b01a6a7bd_1282386_475b0fd5792c112fb369307a707e494e.webp 400w,
               /project/rbpyeast/Picture2_hu35c416225f13a2100881285b01a6a7bd_1282386_ec40b92233724084d9c1d0c570b00b65.webp 760w,
               /project/rbpyeast/Picture2_hu35c416225f13a2100881285b01a6a7bd_1282386_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture2_hu35c416225f13a2100881285b01a6a7bd_1282386_475b0fd5792c112fb369307a707e494e.webp&#34;
               width=&#34;376&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Immunoprecipitation experimental design
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I performed immunoprecipitation on each of the selected RBPs and captured all their interacting partners in the &lt;strong&gt;presence&lt;/strong&gt; or &lt;strong&gt;absence&lt;/strong&gt; of RNA. This allowed me to obtain two distinct groups of interactors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Protein-Protein interactors (PPI)&lt;/strong&gt;: As a result of RNA digestion by RNase A, all the nodes in this group interact with our hubs in an &lt;strong&gt;RNA-independent&lt;/strong&gt; manner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RNA-dependent interactors (RDI)&lt;/strong&gt;: This group consists of all the nodes that interact with our hubs in an &lt;strong&gt;RNA-dependent&lt;/strong&gt; manner.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using a label-free quantification (LFQ) MS protocol, I quantified the interactors in both groups. These interactors, along with the hub candidates, served as the building blocks for constructing the function-based networks.&lt;/p&gt;
&lt;h3 id=&#34;data-analysis&#34;&gt;Data analysis&lt;/h3&gt;
&lt;p&gt;I have not included any code on this post but, If you get curious and want to check it, you can find it available at the following github repository &lt;a href=&#34;https://github.com/AFraderaSola/Scerevisiae_RBPs_Interactome&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repository&lt;/a&gt;. I will reference which subfolders belong to each analysis on their corresponding subsection.&lt;/p&gt;
&lt;h4 id=&#34;rbp-interactors-quantification&#34;&gt;RBP interactors quantification&lt;/h4&gt;
&lt;p&gt;The code for this analysis can be found in the following &lt;a href=&#34;https://github.com/AFraderaSola/Scerevisiae_RBPs_Interactome/tree/main/01_IPscreen/YAFXXX/LFQ/01_CoreAnalysis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repository subfolder&lt;/a&gt;. During this section, I am gonna assume you know some basic MS concepts; otherwise you can check this nice review from &lt;a href=&#34;https://portlandpress.com/biochemist/article/42/5/64/226371/A-beginner-s-guide-to-mass-spectrometry-based&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinha &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt; to freshen them up.&lt;/p&gt;
&lt;p&gt;After the immunoprecipitation experiments, I obtained, in quadruplicate, protein elution products for three conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Wild type (WT)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TAP-tagged IP RNase treated (RNase)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TAP-tagged IP untreated (IP)&lt;/strong&gt;
These are ready for MS measurement; as mentioned before, I choose a LFQ protocol. Long story short, this means we can directly use our digested peptides without adding any chemical or metabolic labelling. This way, for each of our selected 40 candidates I would &lt;strong&gt;quantify&lt;/strong&gt; their RNase and IP &lt;strong&gt;interactors&lt;/strong&gt; so I could compare them to each other and against a WT. 
The first step in the quantification is to match the MS peptide spectra with protein groups; for this purpose, I use the andromeda search engine as incorporated in &lt;a href=&#34;https://www.maxquant.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MaxQuant&lt;/a&gt;. This allows for protein quantification, based on the peptide intensity. I will not go into further details on how LFQ works, you can chek this review from &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S1535947620333107?via%3Dihub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cox &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt; if you want to learn more.&lt;/li&gt;
&lt;/ul&gt;
















&lt;figure  id=&#34;figure-protein-filtering-steps&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Protein filtering steps&#34; srcset=&#34;
               /project/rbpyeast/Picture3_huc656d23deb9cb997dc9569e5e7f0f90e_126243_45dc9703139a4acdafd40426672968b0.webp 400w,
               /project/rbpyeast/Picture3_huc656d23deb9cb997dc9569e5e7f0f90e_126243_b6d5a706435068ca0b5717b11ff500f4.webp 760w,
               /project/rbpyeast/Picture3_huc656d23deb9cb997dc9569e5e7f0f90e_126243_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture3_huc656d23deb9cb997dc9569e5e7f0f90e_126243_45dc9703139a4acdafd40426672968b0.webp&#34;
               width=&#34;760&#34;
               height=&#34;634&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Protein filtering steps
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;With our proteins identified we proceed with a series of quality control filtering steps; mainly we filter out the following protein groups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Known contaminants&lt;/strong&gt;, present on any MS experiment (i. e., keratin), as provided by the &lt;a href=&#34;http://www.coxdocs.org/doku.php?id=maxquant:start_downloads.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cox lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reverse peptides&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Filter peptides by &lt;strong&gt;razor&lt;/strong&gt; and &lt;strong&gt;unique peptide number&lt;/strong&gt;. This way, I only keep protein with a minimum of razor+unique peptide count higher than 2 and a minimum of unique peptide count higher than 1.&lt;/li&gt;
&lt;li&gt;Filter out by &lt;strong&gt;quantification event&lt;/strong&gt;. This way, I decide to keep only proteins with a minimum of 2 quantification events along the replicates. Thus, any protein without an intensity value associated (not NA) in, at least, two out of four replicates will be filtered out.&lt;/li&gt;
&lt;/ul&gt;
















&lt;figure  id=&#34;figure-lfq-intesities-distribution-original-vs-imputed-values&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;LFQ intesities distribution: original vs. imputed values&#34; srcset=&#34;
               /project/rbpyeast/Picture4_hu7bc3ce988d6af66fb46b53d9dd37ab2f_361805_6619785180c22aebccb609ef685349dd.webp 400w,
               /project/rbpyeast/Picture4_hu7bc3ce988d6af66fb46b53d9dd37ab2f_361805_975cb2321a148900f1262d488c550f6c.webp 760w,
               /project/rbpyeast/Picture4_hu7bc3ce988d6af66fb46b53d9dd37ab2f_361805_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture4_hu7bc3ce988d6af66fb46b53d9dd37ab2f_361805_6619785180c22aebccb609ef685349dd.webp&#34;
               width=&#34;538&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      LFQ intesities distribution: original vs. imputed values
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Next step is dealing with the &lt;strong&gt;missing values&lt;/strong&gt;. A known issue of MS experiments is the &lt;strong&gt;abundance of NA values&lt;/strong&gt; along the detected protein groups due to technical limitations. For instance, a protein group could be identified with an average intensity of 25 in three replicates and have an NA value on the fourth. Our approach for these NA values is to assume that the protein was &lt;strong&gt;not detected due to technical limitations&lt;/strong&gt; not because it was not present in the protein mixture. This way, we decide to impute an intensity value for all NA values still present &lt;strong&gt;after the filtering steps&lt;/strong&gt;. We do so by shifting a &lt;strong&gt;beta distribution&lt;/strong&gt; obtained from the LFQ intensity values to the &lt;strong&gt;limit of quantitation&lt;/strong&gt;. This way, the resulting imputed values will always be random values constricted to the lowest end of our LFQ intensities. This is just one approach among many; if you are interested in further reading regarding MS data imputation, I would suggest this article from &lt;a href=&#34;https://www.nature.com/articles/s41598-017-19120-0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wei &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;. 
With our NA values imputed, we are ready to proceed with a series of quality control and exploratory analysis checks. These are pretty standard on any omics analysis (i. e., clustering by pearson correlation coefficient and dimensionality reduction by PCA) so I will not cover them in this post.&lt;/p&gt;
















&lt;figure  id=&#34;figure-volcano-plots-ppi-comparison-left-and-rdi-comparison-right&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Volcano plots: PPI comparison (left) and RDI comparison (right)&#34; srcset=&#34;
               /project/rbpyeast/Picture5_huf8d1ec54b25971814006d6b6d672e619_191991_7272f843651625d72bedc5984d8df809.webp 400w,
               /project/rbpyeast/Picture5_huf8d1ec54b25971814006d6b6d672e619_191991_45111dc1c6ec859c79292767510f3db9.webp 760w,
               /project/rbpyeast/Picture5_huf8d1ec54b25971814006d6b6d672e619_191991_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture5_huf8d1ec54b25971814006d6b6d672e619_191991_7272f843651625d72bedc5984d8df809.webp&#34;
               width=&#34;760&#34;
               height=&#34;236&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Volcano plots: PPI comparison (left) and RDI comparison (right)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;This leads to our final step, where we assess quantified interactors differences among our three conditions. We do so with a standard &lt;a href=&#34;https://en.wikipedia.org/wiki/Student%27s_t-test&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;t-test&lt;/a&gt;. The results are &lt;strong&gt;visualised as a volcano plot&lt;/strong&gt;, which offers an intuitive way to identify enriched interactors and &lt;strong&gt;benchmark the experiment quality&lt;/strong&gt; by observing the RBP-TAP and RNase behaviour. As described before, we are interested in obtaining to groups of interactors, as shown for PAB1 in the example volcano plots:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PPI&lt;/strong&gt;, resulting from the comparison of a treated TAP-tagged RBP (RNase) to a wildt type (WT). In this comparison, the &lt;strong&gt;RBP-TAP targeted&lt;/strong&gt; during the immunoprecipitation gets &lt;strong&gt;clearly enriched&lt;/strong&gt; as it is not pulled down on the WT condition. On the other hand, the RNase enzyme falls on the &lt;strong&gt;background&lt;/strong&gt; due to its presence in both conditions. All RBP-TAP &lt;strong&gt;RNA independent interactors&lt;/strong&gt; get enriched in this comparison.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RDI&lt;/strong&gt;, resulting from the comparison of an untreated TAP-tagged RBP (IP) to a treated TAP-tagged RBP (RNase). In this comparison, the &lt;strong&gt;RBP-TAP targeted&lt;/strong&gt; during the immunoprecipitation falls on the &lt;strong&gt;background&lt;/strong&gt; as it is equally pulled down in both conditions. On the other hand, the RNase enzyme gets &lt;strong&gt;negatively enriched&lt;/strong&gt; as it is only present in the treated condition (RNase).  All RBP-TAP &lt;strong&gt;RNA dependent interactors&lt;/strong&gt; get enriched in this comparison.&lt;/li&gt;
&lt;/ul&gt;
















&lt;figure  id=&#34;figure-bar-plot-ppi-green-rdi-orange-and-ovelap-purple-groups&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Bar plot: PPI (green), RDI (orange) and ovelap (purple) groups&#34; srcset=&#34;
               /project/rbpyeast/Picture6_hu66ab9d9071761b41732509a968470b32_88437_8ee5a9fec67d54fd4fb49f902ffe86e4.webp 400w,
               /project/rbpyeast/Picture6_hu66ab9d9071761b41732509a968470b32_88437_ebb547a0b488df0da5ed0ba66c72ae43.webp 760w,
               /project/rbpyeast/Picture6_hu66ab9d9071761b41732509a968470b32_88437_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture6_hu66ab9d9071761b41732509a968470b32_88437_8ee5a9fec67d54fd4fb49f902ffe86e4.webp&#34;
               width=&#34;760&#34;
               height=&#34;242&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Bar plot: PPI (green), RDI (orange) and ovelap (purple) groups
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;This way, we repeated this setup for all our 40 RBPs and we obtained two &lt;strong&gt;clearly different&lt;/strong&gt; groups (minimal overlap, &lt;strong&gt;in purple&lt;/strong&gt; on the barplot image) corresponding to the &lt;strong&gt;PPI&lt;/strong&gt; and &lt;strong&gt;RDI&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;functional-analysis&#34;&gt;Functional Analysis&lt;/h4&gt;
&lt;p&gt;The code for this analysis can be found in the following &lt;a href=&#34;https://github.com/AFraderaSola/Scerevisiae_RBPs_Interactome/tree/main/01_IPscreen/YAFXXX/LFQ/02_FunctionalAnalysis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repository subfolder&lt;/a&gt;.&lt;/p&gt;
















&lt;figure  id=&#34;figure-functional-enrichment-heat-map&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Functional enrichment heat map&#34; srcset=&#34;
               /project/rbpyeast/Picture7_hu3bd87f2f219f2af0a026a5f839249d06_924270_deeab307e6fd330f9b80633ed793512c.webp 400w,
               /project/rbpyeast/Picture7_hu3bd87f2f219f2af0a026a5f839249d06_924270_dac0222aa778702d00c03cf4197727da.webp 760w,
               /project/rbpyeast/Picture7_hu3bd87f2f219f2af0a026a5f839249d06_924270_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture7_hu3bd87f2f219f2af0a026a5f839249d06_924270_deeab307e6fd330f9b80633ed793512c.webp&#34;
               width=&#34;760&#34;
               height=&#34;386&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Functional enrichment heat map
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;After the (long) quantification section, I described how our network &lt;strong&gt;hubs&lt;/strong&gt; (target tagged RBPs) and &lt;strong&gt;nodes&lt;/strong&gt; (&lt;strong&gt;PPI&lt;/strong&gt; and &lt;strong&gt;RDI&lt;/strong&gt; groups) were obtained. At this point I would be ready to build the interactome network, as the &lt;strong&gt;edges&lt;/strong&gt; just connect the nodes to the hubs when they were quantified on their respective experiments. I indeed have all the elements to build a &lt;em&gt;basic&lt;/em&gt; interactome network, but I am interested in building a &lt;em&gt;function-based&lt;/em&gt; network. Thus I need to classify the hubs by &lt;strong&gt;function&lt;/strong&gt; in order to do so. I already selected them following functional criteria and one could argue this would be already enough. But I want to take it a step further and see if not just the &lt;em&gt;hubs&lt;/em&gt; have associated functions but also their associated &lt;em&gt;nodes&lt;/em&gt;. Thus, I choose to perform a functional enrichment analysis for each hub associated nodes. Again, this is a standard analysis included on many omics workflows so I will not cover it deeply. Long story short, I performed an &lt;strong&gt;over-representation analysis&lt;/strong&gt; as implemented in the &lt;a href=&#34;https://yulab-smu.top/biomedical-knowledge-mining-book/enrichment-overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ClusterProfiler R package&lt;/a&gt; which, in brief, calculates p-values by hypergeometric distribution from a experimentally derived list of enriched IDs (PPI or RDI groups) and its background (Quantified proteins). This way we obtained the PPI and RDI associated &lt;a href=&#34;https://www.kegg.jp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KEGG&lt;/a&gt; pathways for each hub, if any.&lt;/p&gt;
&lt;h4 id=&#34;network-analysis&#34;&gt;Network Analysis&lt;/h4&gt;
&lt;p&gt;Now comes the fun part; I do have all the &lt;strong&gt;elements&lt;/strong&gt; to construct a network (hubs, nodes and edges) and a &lt;strong&gt;data-driven functional classification&lt;/strong&gt; criteria. Thus I can proceed to build the networks, with the R &lt;a href=&#34;https://igraph.org/r/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;igraph&lt;/a&gt;  &lt;strong&gt;nicely algorithm&lt;/strong&gt; implementation. For the &lt;strong&gt;PPI&lt;/strong&gt; and &lt;strong&gt;RDI&lt;/strong&gt; data, I decided to create two different kind of networks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;global network&lt;/strong&gt;, containing all 40 hubs. In such networks, hubs and their edges would be colour highlighted when they had a &lt;strong&gt;unique associated function&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
















&lt;figure  id=&#34;figure-global-network-ppi-left-and-rdi-right-groups-as-a-network&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Global network: PPI (left) and RDI (right) groups as a network&#34; srcset=&#34;
               /project/rbpyeast/Picture8_huff5e56031cfadb1e54d6aa6589d7e937_17314743_33c0fb1f675b29c9c668b65a418ea9cb.webp 400w,
               /project/rbpyeast/Picture8_huff5e56031cfadb1e54d6aa6589d7e937_17314743_22435ff4dbecfe76ddea97c9bad48a6d.webp 760w,
               /project/rbpyeast/Picture8_huff5e56031cfadb1e54d6aa6589d7e937_17314743_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture8_huff5e56031cfadb1e54d6aa6589d7e937_17314743_33c0fb1f675b29c9c668b65a418ea9cb.webp&#34;
               width=&#34;760&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Global network: PPI (left) and RDI (right) groups as a network
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;function-based subnetwork&lt;/strong&gt;, containing all hubs associated with a particular subnetwork. For these networks I also colour highlighted the nodes, so they would show whether they have been reported before or not on the &lt;strong&gt;BioGRID database&lt;/strong&gt; and whether they have been &lt;strong&gt;classified as RBPs&lt;/strong&gt; or not.&lt;/li&gt;
&lt;/ul&gt;
















&lt;figure  id=&#34;figure-function-based--subnetwork-ppi-left-and-rdi-right-groups-as-a-network&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Function-based  subnetwork: PPI (left) and RDI (right) groups as a network&#34; srcset=&#34;
               /project/rbpyeast/Picture9_hu9e0a498f5e9e1145609a8ce9ab0ad3f0_2484197_e99ac544aef76d062a052844189adccd.webp 400w,
               /project/rbpyeast/Picture9_hu9e0a498f5e9e1145609a8ce9ab0ad3f0_2484197_c2f76facfca31f2200f9e645bd5a45ab.webp 760w,
               /project/rbpyeast/Picture9_hu9e0a498f5e9e1145609a8ce9ab0ad3f0_2484197_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture9_hu9e0a498f5e9e1145609a8ce9ab0ad3f0_2484197_e99ac544aef76d062a052844189adccd.webp&#34;
               width=&#34;760&#34;
               height=&#34;541&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Function-based  subnetwork: PPI (left) and RDI (right) groups as a network
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Additionally I also combined the &lt;strong&gt;PPI&lt;/strong&gt; and &lt;strong&gt;RDI&lt;/strong&gt; groups into a &lt;strong&gt;global network&lt;/strong&gt; and &lt;strong&gt;function-based subnetwork&lt;/strong&gt;. For these networks, instead of highlighting the hubs or the nodes I choose &lt;strong&gt;to highlight the edges&lt;/strong&gt; to show their group association (PPI, RDI or overlap).&lt;/p&gt;
















&lt;figure  id=&#34;figure-global-and-function-based-networks-ppi-and-rdi-groups-combined-as-a-network&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Global and Function-based networks: PPI and RDI groups combined as a network&#34; srcset=&#34;
               /project/rbpyeast/Picture10_hu80227aec0603cc357c2b9080a880b415_20395151_6af69348b5d7f5afe4f926ebd981414a.webp 400w,
               /project/rbpyeast/Picture10_hu80227aec0603cc357c2b9080a880b415_20395151_863a04e8a5a92710c20f013c742801c4.webp 760w,
               /project/rbpyeast/Picture10_hu80227aec0603cc357c2b9080a880b415_20395151_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/rbpyeast/Picture10_hu80227aec0603cc357c2b9080a880b415_20395151_6af69348b5d7f5afe4f926ebd981414a.webp&#34;
               width=&#34;633&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Global and Function-based networks: PPI and RDI groups combined as a network
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The purpose of all the data analysis and network building in this project is to create a &lt;strong&gt;valuable resource&lt;/strong&gt;. We identified which &lt;strong&gt;nodes are novel&lt;/strong&gt;, meaning they have not been reported in the BioGRID database, and whether they are classified as RBPs or not. Additionally, we identified potential functional associations with our &lt;strong&gt;function-based&lt;/strong&gt; networks. Following the &lt;strong&gt;guilt-by-association&lt;/strong&gt; principle, if a node is associated with other nodes and hubs that participate in splicing pathways, for example, it is likely involved in splicing. This can serve as a starting point for &lt;strong&gt;in-depth functional characterization&lt;/strong&gt;. To facilitate this, I developed a user-friendly &lt;strong&gt;shiny app&lt;/strong&gt;, available at &lt;a href=&#34;https://butterlab.imb-mainz.de/RINE/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://butterlab.imb-mainz.de/RINE/&lt;/a&gt;, where all the networks can be explored. I hope this app makes the data &lt;strong&gt;accessible&lt;/strong&gt; and enables &lt;strong&gt;RNA research labs&lt;/strong&gt; to deepen their understanding of the RBP research field.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scoring function development for RNA-Seq differential expression assessment</title>
      <link>https://AFraderaSola.github.io/project/lolium/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://AFraderaSola.github.io/project/lolium/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#rnaseq-degs-and-r-pacakges-for-data-analysis&#34;&gt;RNAseq, DEGs and R pacakges for data analysis&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#jury-vote-function-to-determine-degs&#34;&gt;Jury vote function to determine DEGs&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#case-of-study-drought-resistance-in-perennial-ryegrass&#34;&gt;Case of study: Drought resistance in perennial ryegrass&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;My M.Sc project aimed to develop a scoring function for detecting differentially expressed genes (DEGs) using RNA-Seq data. I was motivated by the abundance of existing packages and resources for DEG analysis and wanted to investigate the differences between the most popular methods, compare their results, and determine the optimal approach for identifying DEGs. To achieve this, I utilized a novel dataset focused on drought resistance in the ryegrass species &lt;em&gt;Lolium perenne&lt;/em&gt; to test the various DEG detection packages and optimize the methodology. Through this project, I was able to contribute to the important field of crop agriculture while improving the accuracy and efficiency of DEG analysis.&lt;/p&gt;
&lt;h3 id=&#34;rnaseq-degs-and-r-pacakges-for-data-analysis&#34;&gt;RNAseq, DEGs and R pacakges for data analysis&lt;/h3&gt;
&lt;p&gt;RNA sequencing (RNAseq) is a popular method for measuring gene expression levels in cells or tissues, and RNAseq data analysis involves various steps, including quality control, alignment, quantification of gene expression, differential gene expression analysis, and functional enrichment analysis. Differential gene expression analysis identifies differentially expressed genes (DEGs), which are genes that show significant changes in expression levels between two or more conditions. DEG analysis can provide valuable insights into gene regulation, discover novel transcripts, and identify potential biomarkers for disease diagnosis and treatment. DEG analysis involves several steps, including read alignment, quality control, normalization, and statistical testing, and there are several software tools and packages available for each step.&lt;/p&gt;
&lt;p&gt;For this project, the focus was on the normalization and statistical testing stages of DEG analysis, with read alignment and quality control being performed ubiquitously throughout the analysis. The selection of the appropriate tool depends on various factors, such as study design, sample size, distribution of expression data, and desired level of sensitivity and specificity.Three widely used packages, edgeR, DESeq2, and limma+voom, were selected along with a less conventional package, baySeq, for comparison:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://academic.oup.com/bioinformatics/article/26/1/139/182458?login=true&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;edgeR&lt;/strong&gt;&lt;/a&gt;: edgeR (Empirical analysis of Digital Gene Expression in R) is a software package used for the identification of differentially expressed genes in RNAseq datasets. It uses a negative binomial model and empirical Bayes estimation to estimate the dispersion parameters and gene-wise dispersion estimates. This package can be used for single-factor or multi-factor experimental designs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://genomebiology.biomedcentral.com/articles/10.1186/s13059-014-0550-8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;DESeq2&lt;/strong&gt;&lt;/a&gt;: DESeq2 is a R package that can be used to analyze differential gene expression in RNAseq experiments. It uses the negative binomial distribution to model count data and provides methods for estimating size factors and dispersion parameters. DESeq2 also provides methods for normalizing data, performing hypothesis testing, and visualizing results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://f1000research.com/articles/5-1408/v3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;limma+voom&lt;/strong&gt;&lt;/a&gt;: limma (Linear Models for Microarray Data) is an R package that can be used to analyze differential gene expression in RNAseq datasets. It uses linear models to analyze differential expression and provides a range of functions for data normalization and visualization. The voom (Variance modeling at the Observed Mean) function in limma can be used to transform count data into log2-counts per million (logCPM) values, which can then be used with limma for differential expression analysis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-11-422&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;baySeq&lt;/strong&gt;&lt;/a&gt;: baySeq is a software package for analyzing RNAseq data using Bayesian methods. It can be used to identify differentially expressed genes, quantify expression levels, and estimate the probability of differential expression. baySeq models count data using a negative binomial distribution and provides a flexible framework for incorporating prior information about gene expression.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jury-vote-function-to-determine-degs&#34;&gt;Jury vote function to determine DEGs&lt;/h3&gt;
&lt;p&gt;I decided to design a jury vote function that could incorporate the results from the four previously described DEGs packages (edgeR, DESeq2, limma+voom, and baySeq) with the following criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;For each gene, I calculated the p-value of differential expression for each package, using the recommended or default settings for each one.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;I applied a multiple testing correction to the p-values, such as the Benjamini-Hochberg or Bonferroni correction, to control for false positive results.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;I identified the genes that have a significant p-value after multiple testing correction, using a chosen significance threshold (e.g., FDR &amp;lt; 0.05).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;I ranked the genes based on the significance of their p-value for each gene/package, from most significant to least significant.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;I assigned a weight to each gene based on its rank, such that DEG is assigned with a value of 1 or 0 otherwise.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;I calculated a weighted average score for each gene, using the assigned weights. This would result in a single, combined score for each gene.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;I used the score to determine the strength of DEGs&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This way, this jury vote function takes into account the results from multiple packages and weight them based on their relative performance, being a more robust and reliable identification of differentially expressed genes.&lt;/p&gt;
















&lt;figure  id=&#34;figure-jury-vote-score-genes-are-classified-as-not-degs-score--0-or-degs-score--1-4-robustness-of-the-deg-can-be-assessed-looking-at-the-score-1-least-robust-4-most-robust&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Jury vote score. Genes are classified as not DEGs (score = 0) or DEGs (score = 1-4). Robustness of the DEG can be assessed looking at the score (1 least robust, 4 most robust)&#34; srcset=&#34;
               /project/lolium/featured_hu5ac57e246bf4a08b7e10d7ac1a775b28_21751_0e1d61013f318e5dddc1212b76e6af9b.webp 400w,
               /project/lolium/featured_hu5ac57e246bf4a08b7e10d7ac1a775b28_21751_60847caafbf22af21209c2f7fa00844d.webp 760w,
               /project/lolium/featured_hu5ac57e246bf4a08b7e10d7ac1a775b28_21751_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/lolium/featured_hu5ac57e246bf4a08b7e10d7ac1a775b28_21751_0e1d61013f318e5dddc1212b76e6af9b.webp&#34;
               width=&#34;760&#34;
               height=&#34;353&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Jury vote score. Genes are classified as not DEGs (score = 0) or DEGs (score = 1-4). Robustness of the DEG can be assessed looking at the score (1 least robust, 4 most robust)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;It also gives the flexibility to decide whether you want to maximize your results (taking any DEGs in any package, score of 1) or get a subset of very reliable, robust results (taking only DEGs in all packages, score of 4).&lt;/p&gt;
&lt;h3 id=&#34;case-of-study-drought-resistance-in-perennial-ryegrass&#34;&gt;Case of study: Drought resistance in perennial ryegrass&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Lolium perenne&lt;/em&gt;, commonly known as perennial ryegrass, is a cool-season grass widely used in temperate regions for forage production, turfgrass, and erosion control due to its rapid establishment, high productivity, and quality. In addition, &lt;em&gt;L. perenne&lt;/em&gt; has gained interest as a model species for studying abiotic stress tolerance, particularly drought resistance.&lt;/p&gt;
&lt;p&gt;Drought is a major environmental stress that affects plant growth and productivity, and its impact is expected to increase with climate change. Therefore, understanding the molecular mechanisms underlying drought resistance is crucial for developing more resilient crops. &lt;em&gt;L. perenne&lt;/em&gt; has several advantages for studying drought resistance, such as its ability to survive and recover from drought, its relatively small genome size, and the availability of genetic resources and tools.&lt;/p&gt;
&lt;p&gt;Overall, &lt;em&gt;L. perenne&lt;/em&gt; is a valuable species for studying drought resistance and developing more resilient crops. Its use as a model species for abiotic stress research has the potential to improve our understanding of the molecular basis of stress tolerance and aid in the development of new crops with improved resilience.&lt;/p&gt;
&lt;p&gt;RNAseq was collected from &lt;em&gt;L. perenne&lt;/em&gt; root and leaf tissue at different soil water content; 35%, considered a regular condition (no stress) and 15%, 5%, and 1%, increasing stress conditions.&lt;/p&gt;
















&lt;figure  id=&#34;figure-experimental-conditions-to-determine-l-perenne-degs-under-drought-conditions&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Experimental conditions to determine L. perenne DEGs under drought conditions&#34; srcset=&#34;
               /project/lolium/Picture1_hu2c53f1038efb895537526eccb7ebc2ab_183807_bad0541e2bf3d7f2b50623ac799eb77b.webp 400w,
               /project/lolium/Picture1_hu2c53f1038efb895537526eccb7ebc2ab_183807_9b91d7c309d941e78d0ba49150ee088f.webp 760w,
               /project/lolium/Picture1_hu2c53f1038efb895537526eccb7ebc2ab_183807_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/lolium/Picture1_hu2c53f1038efb895537526eccb7ebc2ab_183807_bad0541e2bf3d7f2b50623ac799eb77b.webp&#34;
               width=&#34;760&#34;
               height=&#34;652&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Experimental conditions to determine L. perenne DEGs under drought conditions
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Then, I used the previously described jury vote sytem to determine the DEGs.&lt;/p&gt;
















&lt;figure  id=&#34;figure-number-of-degs-per-rnaseq-package&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Number of DEGs per RNAseq package&#34; srcset=&#34;
               /project/lolium/Picture2_hub874c0c00bb5cdfc7bc0cf4e8fb343d1_323155_d4a8a0694c00a6bbbfb56d83799d93c8.webp 400w,
               /project/lolium/Picture2_hub874c0c00bb5cdfc7bc0cf4e8fb343d1_323155_6f02b6b908491fb34817dd1534ff383a.webp 760w,
               /project/lolium/Picture2_hub874c0c00bb5cdfc7bc0cf4e8fb343d1_323155_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/lolium/Picture2_hub874c0c00bb5cdfc7bc0cf4e8fb343d1_323155_d4a8a0694c00a6bbbfb56d83799d93c8.webp&#34;
               width=&#34;760&#34;
               height=&#34;557&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Number of DEGs per RNAseq package
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The results of the analysis showed that edgeR, DESeq2, and limma+voom had a similar performance in terms of identifying differentially expressed genes (DEGs), as evidenced by the low number of DEGs unique to each package. However, BaySeq yielded a higher number of DEGs using its own methodology.&lt;/p&gt;
&lt;p&gt;In addition to comparing the packages, we also conducted a functional analysis to investigate whether the genes associated with drought conditions were functionally related. The results of the functional analysis provided valuable insights into the mechanisms by which &lt;em&gt;L. perenne&lt;/em&gt; adapts to drought conditions.&lt;/p&gt;
















&lt;figure  id=&#34;figure-number-of-degs-per-rnaseq-package&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Number of DEGs per RNAseq package&#34; srcset=&#34;
               /project/lolium/Picture3_huc57a54767c1656f2717898bbed19fdb3_238664_8dd343ece79ffafabd16312271477a53.webp 400w,
               /project/lolium/Picture3_huc57a54767c1656f2717898bbed19fdb3_238664_a0d95217bd431db64d8c0725fee23109.webp 760w,
               /project/lolium/Picture3_huc57a54767c1656f2717898bbed19fdb3_238664_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://AFraderaSola.github.io/project/lolium/Picture3_huc57a54767c1656f2717898bbed19fdb3_238664_8dd343ece79ffafabd16312271477a53.webp&#34;
               width=&#34;760&#34;
               height=&#34;442&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Number of DEGs per RNAseq package
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;RNAseq is a powerful tool to measure gene expression levels and identify DEGs between different biological conditions, such as different tissues, cell types, developmental stages, or disease states. The RNAseq data analysis pipeline includes several steps, such as quality control, alignment, gene expression quantification, normalization, and statistical testing for differential expression analysis. Several packages and tools are available for each step, and the choice of appropriate methods is crucial for obtaining reliable and biologically meaningful results.&lt;/p&gt;
&lt;p&gt;In this study, we compared the performance of four popular DEGs analysis packages (edgeR, DESeq2, limma+voom, and BaySeq) for the identification of drought-responsive genes in the ryegrass Lolium perenne. We found that the three most widely used packages (edgeR, DESeq2, and limma+voom) performed similarly, while BaySeq identified a larger number of DEGs using its own methodology. We also conducted functional enrichment analysis to gain insights into the biological processes and pathways involved in the drought response in &lt;em&gt;L. perenne&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Overall, our study demonstrates the importance of carefully selecting appropriate methods and packages for RNAseq data analysis and highlights the potential of RNAseq technology for identifying novel genes and biomarkers related to complex biological processes such as drought adaptation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
